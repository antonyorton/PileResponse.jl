var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Index-of-functions","page":"API","title":"Index of functions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"find_cpt_column_names\nget_least_squares_interpolator\nget_load_vs_depth\nget_pile_head_displacement\nget_initial_pile_head_stiffness\nget_soil_type_CPT2012\nget_kc_base_CPT2012\nget_ultimate_shaft_load\nget_ultimate_shaft_resistance\nget_fsmax_shaft_CPT2012\nget_alpha_shaft_CPT2012\nget_fsol_shaft_CPT2012\nget_average_qc_at_pile_base\nget_E0\nget_Vs\nget_Ic\nget_Ic_usingQt_only\nget_bigQtn\nget_bigQt\nget_Fr\nget_Rf\nget_qn\nget_qt\nget_sigmav0_effective\nget_sigmav0_total\nread_delimited_text_file","category":"page"},{"location":"api/#Function-details","page":"API","title":"Function details","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"find_cpt_column_names\nget_least_squares_interpolator\nget_load_vs_depth\nget_pile_head_displacement\nget_initial_pile_head_stiffness\nget_soil_type_CPT2012\nget_kc_base_CPT2012\nget_ultimate_shaft_load\nget_ultimate_shaft_resistance\nget_fsmax_shaft_CPT2012\nget_alpha_shaft_CPT2012\nget_fsol_shaft_CPT2012\nget_average_qc_at_pile_base\nget_E0\nget_Vs\nget_Ic\nget_Ic_usingQt_only\nget_bigQtn\nget_bigQt\nget_Fr\nget_Rf\nget_qn\nget_qt\nget_sigmav0_effective\nget_sigmav0_total\nread_delimited_text_file","category":"page"},{"location":"api/#PileResponse.find_cpt_column_names","page":"API","title":"PileResponse.find_cpt_column_names","text":"find_cpt_column_names(names::Vector{SubString{String}})\n\nReturn a vector [depth_col, qc_col, fs_col, u2_col] providing the relevant names for each item from names.\n\nThe function looks for the (non case sensitive) strings \"depth\", \"qc\", \"fs\" and \"u2\" within the items in names.\n\nExample\n\ndata = read_delimited_text_file(\"./data/example_cpt_data.csv\", delim=',')\ncolumn_names = collect(keys(data))\ndepth_col, qc_col, fs_col, u2_col = find_cpt_column_names(column_names)\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_least_squares_interpolator","page":"API","title":"PileResponse.get_least_squares_interpolator","text":"get_least_squares_interpolator(xvals::AbstractVector, yvals::AbstractVector; p0::AbstractVector = [0.0,0.0])\n\nReturn a function fun() such that fun(x) = mx + b is the least squares linear approximation to [xvals, yvals].\n\np0 [Float64, Float64] is the initial guess, and [0.0, 0.0] seems to work.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_load_vs_depth","page":"API","title":"PileResponse.get_load_vs_depth","text":"get_load_vs_depth(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64}, Ic::AbstractVector{Float64}, applied_load::Float64, pile_ult_load::Float64, pile_length::Float64, pile_diameter::Float64, pile_type::AbstractString)\n\nReturns [depth, load], which is the load carried by the pile at each depth for a given applied_load at the pile head.\n\nExample\n\nmydepth, myload = get_load_vs_depth(depth_m, qc_MPa, Ic, applied_load, pile_ult_load, pile_length, pile_diameter, pile_type)\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_pile_head_displacement","page":"API","title":"PileResponse.get_pile_head_displacement","text":"get_pile_head_displacement(k0::Float64, pile_head_loads::AbstractVector{Float64}, pile_ult_load::Float64)\n\nReturn the pile head displacement for the given load vector.\n\nArguments\n\nk0::Float64 is the initial pile head stiffness.\npile_head_loads::AbstractVector{Float64} is a vector of the load applied at the pile head. It will be sorted into increasing order.\npile_ult_load::Float64 is the assessed ultimate load of the pile.\n\nSee also get_initial_pile_head_stiffness.\n\nThe assumption is that the pile head stiffness k for a given load P can be approximated as:\n\nk = k_0(1 - (PP_ult)^03).\n\nReference\n\nMayne, P. W. (2001) Stress-strain-strength flow parameters from enhanced in-situ tests. \nFahey, M. and Carter, J. P. (1993) A finite element study of the pressuremeter in sand using a nonlinear elastic plastic model.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_initial_pile_head_stiffness","page":"API","title":"PileResponse.get_initial_pile_head_stiffness","text":"get_initial_pile_head_stiffness(pile_length::Float64, pile_diameter::Float64, Epile::Int64, Esoil_L::Float64, Esoil_Lon2::Float64; ν::Float64 = 0.3)\n\nReturn the initial pile head stiffness for small strain (MN/m).\n\nArguments\n\nEpile (MPa) is the elastic modulus of the pile.\nEsoil_L (MPa) is the small strain (E₀) elastic modulus of the soil at the base of the pile shaft.\nEsoil_Lon2 (MPa) is the small strain (E₀) elastic modulus of the soil at the midpoint of the pile shaft.\nν (input as \\nu[tab]) is the Poisson's ratio of the soil.\n\nThe theory is based on the closed form elastic solution provided by Randolph and Wroth (1978). The theory assumes that the soil has a linearly increasing elastic modulus with depth.\n\nReference\n\nRandolph, M. F. and Wroth, C. P. (1978). Analysis of deformation of vertically loaded piles. Jnl. Geot. Eng. Divn., ASCE, 108 (GT12): 1465 - 1488.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_soil_type_CPT2012","page":"API","title":"PileResponse.get_soil_type_CPT2012","text":"get_soil_type_CPT2012(Ic::AbstractVector{Float64})\n\nReturn a vector of soil types (deonted by 1, 2 or 3) for use in CPT2012 capacity assessment:\n\n1 = Silts and clays (Ic > 2.70).\n2 = Intermediate soil (2.50 < Ic <= 2.70).\n3 = Sands (Ic <= 2.50).\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_kc_base_CPT2012","page":"API","title":"PileResponse.get_kc_base_CPT2012","text":"get_kc_base_CPT2012()\n\nReturn a dictionary with pile base resistance factors k_c such that:\n\nQ_ult(base) = k_c cdot q_ca, where q_ca is the equivalent average cone resistance at the pile base.\n\nKeys: pile types.\nValues: k_c factors for [silt/clay, intermediate soils, sands].\n\nSee also get_average_qc_at_pile_base.\n\nReference\n\nFrank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_ultimate_shaft_load","page":"API","title":"PileResponse.get_ultimate_shaft_load","text":"get_ultimate_shaft_load(depth_m::AbstractVector{Float64}, fshaft_MPa::AbstractVector{Float64}, pile_diameter::Float64, pile_length::Float64)\n\nReturn the ultimate shaft load for the pile (MN).\n\nfshaft_MPa is the ultimate shaft resistance (MPa) for each node corresponding to the depth_m vector.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_ultimate_shaft_resistance","page":"API","title":"PileResponse.get_ultimate_shaft_resistance","text":"get_ultimate_shaft_resistance(qc_MPa::AbstractVector{Float64}, Ic::AbstractVector{Float64}, pile_type::String; factor::Float64 = 1.0)\n\nReturn the ultimate shaft resistance (MPa) for each element. The method follows the approach described by Frank (2017) where:\n\nf_s = alphacdot f_sol, with f_sol leq f_smax\n\nSet factor = 1.0 for ultimate resistance and factor < 1.0 for loads less than the ultimate load.\n\nSee also:\n\nget_fsol_shaft_CPT2012\nget_alpha_shaft_CPT2012\nget_fsmax_shaft_CPT2012\n\nReference\n\nFrank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_fsmax_shaft_CPT2012","page":"API","title":"PileResponse.get_fsmax_shaft_CPT2012","text":"get_fsmax_shaft_CPT2012()\n\nReturn a dictionary with maximum pile shaft resistance values f_smax, such that:\n\nQ_ult(shaft) leq f_smax.\n\nKeys: Pile types.\nValues: Maximum shaft resistance f_smax (kPa) for [silt/clay, intermediate soils, sands].\n\nReference\n\nFrank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_alpha_shaft_CPT2012","page":"API","title":"PileResponse.get_alpha_shaft_CPT2012","text":"get_alpha_shaft_CPT2012()\n\nReturn a dictionary with pile shaft resistance alpha factors, such that:\n\nQ_ult(shaft) = alpha cdot f_sol\n\nKeys: Pile types.\nValues: alpha factors for [silt/clay, intermediate soils, sands].\n\nSee also: get_fsol_shaft_CPT2012.\n\nReference\n\nFrank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_fsol_shaft_CPT2012","page":"API","title":"PileResponse.get_fsol_shaft_CPT2012","text":"get_fsol_shaft_CPT2012(qc_MPa::AbstractVector{Float64}, Ic::AbstractVector{Float64})\n\nReturn f_sol (kPa), the unfactored ultimate pile shaft resistance.\n\nIc is the CPT soil behaviour type index. If Ic is not available, provide a vector of the same length as qc_MPa with values 1, 2 or 3 depending on whether the soil is silt/clay, intermediate or sand respectively for each point.\n\nSee also get_Ic\n\nReference\n\nFrank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_average_qc_at_pile_base","page":"API","title":"PileResponse.get_average_qc_at_pile_base","text":"get_average_qc_at_pile_base(depth_m::AbstractVector{Float64},qc_MPa::AbstractVector{Float64}, pile_length::Float64, pile_diameter::Float64; clip_to_30pct::Bool = false)\n\nReturn the average qc within +/- 1.5 pile diameters from the base, with values limited to within +/- 30% of the value at the base.\n\nIf clip_to_30pct = false, values will not be limited to +/- 30% of the value at the pile base prior to averaging.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_E0","page":"API","title":"PileResponse.get_E0","text":"get_E0(Vs::AbstractVector{Float64}; gamma::Float64 = 18.0, ν::Float64 = 0.3)\n\nReturn E₀(MPa) = 2 * (1 + ν) * gamma / 9.81 * Vs² * 0.001.\n\nArguments\n\nVs is the shear wave velocity.\ngamma is soil unit weight in kN/m², which is assumed constant.\nν is the soil Poisson's ratio, which is assumed constant.\n\nSee also get_Vs.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_Vs","page":"API","title":"PileResponse.get_Vs","text":"get_Vs(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64}, fs_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}, gw_depth::Float64; gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn (αᵥₛ * qn / pa)^0.5 where αᵥₛ = 10^(0.55 * Ic + 1.68).\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\nReference\n\nRobertson, P. K. and Cabal, K. (2022). Guide to cone penetration testing. 7th Ed. Gregg Drilling LLC.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_Ic","page":"API","title":"PileResponse.get_Ic","text":"get_Ic(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64},\nfs_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}, gw_depth::Float64; gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn the soil behaviour type index based on Qtn:\n\nIc = [(3.47 - log10(Qtn))² + (log10(Fr) + 1.22)²] ^ 0.5.\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\nReference\n\nRobertson, P. K. and Cabal, K. (2022). Guide to cone penetration testing. 7th Ed. Gregg Drilling LLC.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_Ic_usingQt_only","page":"API","title":"PileResponse.get_Ic_usingQt_only","text":"get_Ic_usingQt_only(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64},\nfs_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}, gw_depth::Float64; gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn the soil behaviour type index based on Qt (not Qtn):\n\nIc = [(3.47 - log10(Qt))² + (log10(Fr) + 1.22)²] ^ 0.5.\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\nReference\n\nRobertson, P. K. and Cabal, K. (2022). Guide to cone penetration testing. 7th Ed. Gregg Drilling LLC.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_bigQtn","page":"API","title":"PileResponse.get_bigQtn","text":"get_bigQtn(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64}, fs_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}; gw_depth::Float64, gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn:\n\nQₜₙ = (qₜ - σᵥ₀) / 0.101 * (0.101 / σ'ᵥ₀)ⁿ.\nwhere: n = 0.381 * Ic + 0.05 * σ'ᵥ₀ / 0.101 - 0.15.\n\nUses an iterative process.\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_bigQt","page":"API","title":"PileResponse.get_bigQt","text":"get_bigQt(depth_m::AbstractVector{Float64}, qc_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}; gw_depth::Float64, gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn Qₜ = (qₜ - σᵥ₀) / σ'ᵥ₀.\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_Fr","page":"API","title":"PileResponse.get_Fr","text":"get_Fr(depth_m::AbstractVector{Float64},  qc_MPa::AbstractVector{Float64}, fs_MPa::AbstractVector{Float64},u2_MPa::AbstractVector{Float64}; gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn (fₛ / qₙ) * 100.\n\nArguments\n\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_Rf","page":"API","title":"PileResponse.get_Rf","text":"get_Rf(qc_MPa::AbstractVector{Float64}, fs_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}; a::Float64 = 0.73)\n\nReturn (fₛ / qₜ) * 100.\n\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_qn","page":"API","title":"PileResponse.get_qn","text":"get_qn(depth_m::AbstractVector{Float64},  qc_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}; gamma::Float64 = 18.0, a::Float64 = 0.73)\n\nReturn qₙ = qt - σᵥ₀.\n\nArguments\n\ngamma is soil unit weight in kN/m², which is assumed constant.\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_qt","page":"API","title":"PileResponse.get_qt","text":"get_qt(qc_MPa::AbstractVector{Float64}, u2_MPa::AbstractVector{Float64}; a::Float64 = 0.73)\n\nReturn qt = qc + u2(1 - a).\n\na is the net area ratio of the cone, typically between 0.70 and 0.85.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_sigmav0_effective","page":"API","title":"PileResponse.get_sigmav0_effective","text":"get_sigmav0_effective(depth_m::AbstractVector{Float64}, gw_depth::Float64, gamma::Float64 = 18.0)\n\nReturn the effective vertical stress σ'ᵥ₀ (MPa).\n\nArguments\n\ngw_depth is depth to groundwater in metres.\ngamma is soil unit weight in kN/m², which is assumed constant.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.get_sigmav0_total","page":"API","title":"PileResponse.get_sigmav0_total","text":"get_sigmav0_total(depth_m::AbstractVector{Float64}; gamma::Float64 = 18.0)\n\nReturn the total vertical stress σᵥ₀ (MPa).\n\ngamma is soil unit weight in kN/m², which is assumed constant.\n\n\n\n\n\n","category":"function"},{"location":"api/#PileResponse.read_delimited_text_file","page":"API","title":"PileResponse.read_delimited_text_file","text":"read_delimited_text_file(filepath::String; delim::AbstractChar=',', T::Type=Float64)\n\nReturn a dictionary (data) such that:\n\ndata[col1_header] = col1_values.\n\nAssumes the first row is the header and that all columns below the header have the same type.\n\ndelim is the separator, ',' for comma separated, or '\\t' for tab separated values.\n\n\n\n\n\n","category":"function"},{"location":"#PileResponse.jl","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Pages = [\"tutorial.md\", \"api.md\"]\nDepth = 1","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"To install the package, activate the package REPL by pressing ]. Then run:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Pkg> add \"https://github.com/antonyorton/PileResponse.jl\"","category":"page"},{"location":"#About-PileResponse.jl","page":"Introduction","title":"About PileResponse.jl","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"PileResponse.jl is a module designed for the assessment of the load-deflection response of a pile head under static vertical load. The assessment depends on the pile type and the results of a single cone penetrometer test (CPT) conducted to at least the design toe level of the pile.\n\nThe assessment of ultimate pile shaft and base capacities follows the approach outlined by Frank (2017). The assessment of the non linear load-deflection response is based on the initial pile head stiffness estimated by the Randolph and Wroth (1978) formula. The pile head stiffness is then factored down for increasing loads following the equation proposed by Mayne (2001).\n\nThe interpretation of soil behaviour type (I_c) and shear wave velocity (V_s) from the CPT data follow correlations provided by Robertson and Cabal (2022).","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"References","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Frank, R. (2017). Some aspects of research and practice for pile design in France. Innov. Infrastruct. Solutions. 2 (32) 1 - 15.\n\nFahey, M. and Carter, J. P. (1993). A finite element study of the pressuremeter in sand using a nonlinear elastic plastic model. Can. Geot. Jnl. 30(2): 348 - 362.\n\nRandolph, M. F. and Wroth, C. P. (1978). Analysis of deformation of vertically loaded piles. Jnl. Geot. Eng. Divn., ASCE, 108 (GT12): 1465 - 1488.\n\nMayne, P. W. (2001). Stress-strain-strength-flow parameters from enhanced in-situ tests. Proc. Int. Conf. In-Situ Measurement of Soil Properties and Case Histories. Bali, Indonesia, 27 - 48.\n\nRobertson, P. K. and Cabal, K. (2022). Guide to cone penetration testing. 7th Ed. Gregg Drilling LLC. \n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"EditURL = \"tutorial.jl\"","category":"page"},{"location":"tutorial/#tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Pkg> add \"https://github.com/antonyorton/PileResponse.jl\"","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"import PileResponse as prs","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"push!(LOAD_PATH, \"../../src/\") # Line not needed if package is added as above\nimport PileResponse as prs #hide\nusing PrettyTables\nusing CairoMakie\nCairoMakie.activate!(type=\"svg\");\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Pages = [\"tutorial.md\"]\nDepth = 3","category":"page"},{"location":"tutorial/#CPT-data","page":"Tutorial","title":"CPT data","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We read CPT data from a text file such as a .csv file. It is a requirement that the file has columns for:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"depth (m)\nqc (MPa)\nfs (kPa)\nu2 (kPa)","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The column names should be sensible or the program will not be able to guess them. We also need to ensure the correct relative path to the file and the correct delimeter, for example comma (',') or tab ('\\t').","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"data = prs.read_delimited_text_file(\"../../data/example_cpt_data.csv\", delim=',');\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"After reading the text file, we extract the column names and assign the data to variables.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"depth_col, qc_col, fs_col, u2_col = prs.find_cpt_column_names(collect(keys(data)));\ndepth_m = data[depth_col];\nqc_MPa = data[qc_col];\nfs_MPa = data[fs_col] * 0.001;\nu2_MPa = data[u2_col] * 0.001;\nnothing #hide","category":"page"},{"location":"tutorial/#Plot-the-CPT-data","page":"Tutorial","title":"Plot the CPT data","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"It is recommended to plot the data and check that it looks as expected.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fig1 = Figure(size=(800, 800));\nax1 = Axis(fig1[1, 1], title=\"qc (MPa)\", xlabel=\"qc (MPa)\", ylabel=\"Elevation (m)\", yticks=(-round(depth_m[end] + 1):0));\nax2 = Axis(fig1[1, 2], title=\"fs (kPa)\", xlabel=\"fs (kPa)\", yticks=(-round(depth_m[end] + 1):0));\nax3 = Axis(fig1[1, 3], title=\"u2 (kPa)\", xlabel=\"u2 (kPa)\", yticks=(-round(depth_m[end] + 1):0));\nlines!(fig1[1, 1], qc_MPa, -depth_m);\nlines!(fig1[1, 2], 1000 * fs_MPa, -depth_m);\nlines!(fig1[1, 3], 1000 * u2_MPa, -depth_m);\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Note that the code for creating plots will be hidden from now on. For help with plotting using CairoMakie, refer to the docs at https://docs.makie.org/stable/.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fig1","category":"page"},{"location":"tutorial/#Soil-properties-and-depth-to-groundwater","page":"Tutorial","title":"Soil properties and depth to groundwater","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Here we assign properties which are assumed to be constant over the soil profile. The loss in accuracy from assuming a constant soil unit weight is likely to be acceptable for most situations.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Soil properties.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"gamma_soil = 20.5; #Soil unit weight (kN/m3)\nPoisson_ratio = 0.3;\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Groundwater depth.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"gw_depth = 3.0; # m below ground\nnothing #hide","category":"page"},{"location":"tutorial/#Derive-I_{c},-V_{s}-and-E_{0}","page":"Tutorial","title":"Derive I_c, V_s and E_0","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"From the correlations published by Roberston and Cabal (2022) and the theory of elasticity, we derive:\n\nThe soil behaviour type.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"smallI_c = sqrt(347 - log_10(Q_tn))^2 + (log_10(F_r) + 122)^2","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The shear wave velocity.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"smallV_s = sqrt(alpha_vscdot largefracq_nsmall0101), where alpha_vs = 10^(055 Ic + 168)","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The small strain shear modulus.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"smallG_0 = fracgamma981 cdot V_s^2","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The small strain elastic modulus.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"smallE_0 = 2(1 + ν)G_0","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Ic = prs.get_Ic(depth_m, qc_MPa, fs_MPa, u2_MPa, gw_depth, gamma=gamma_soil, a=0.73);\nVs = prs.get_Vs(depth_m, qc_MPa, fs_MPa, u2_MPa, gw_depth, gamma=gamma_soil, a=0.73);\nE0 = prs.get_E0(Vs, gamma=gamma_soil, ν=Poisson_ratio);\nnothing #hide","category":"page"},{"location":"tutorial/#Linear-approximation-to-E_{0}-with-depth","page":"Tutorial","title":"Linear approximation to E_0 with depth","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"To assess the intial pile head stiffness, we need to model the soil profile as having a linearly increasing elastic modulus with depth. This is a reasonable approximation for many soil profiles, but may not be suitable for some sites.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We obtain a least squares fit to E_0.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fun_E0_linear = prs.get_least_squares_interpolator(depth_m, E0);\nnothing #hide","category":"page"},{"location":"tutorial/#Plot-the-derived-values-from-the-CPT-data","page":"Tutorial","title":"Plot the derived values from the CPT data","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fig2 = Figure(size=(800, 800)); #hide\nax1 = Axis(fig2[1, 1], title=\"Ic\", xlabel=\"Ic\", ylabel=\"Elevation (m)\", yticks=(-round(depth_m[end] + 1):0)); #hide\nax2 = Axis(fig2[1, 2], title=\"Vs (m/s)\", xlabel=\"Vs (m/s)\", yticks=(-round(depth_m[end] + 1):0)); #hide\nax3 = Axis(fig2[1, 3], title=\"E₀ (MPa)\", xlabel=\"E₀ (MPa)\", yticks=(-round(depth_m[end] + 1):0)); #hide\nlines!(fig2[1, 1], Ic, -depth_m, color=RGBf(0.1, 0.5, 0.1)); #hide\nlines!(fig2[1, 2], Vs, -depth_m, color=RGBf(0.1, 0.5, 0.1)); #hide\nlines!(fig2[1, 3], E0, -depth_m, color=RGBf(0.1, 0.5, 0.1)); #hide\nlines!(fig2[1, 3], fun_E0_linear(depth_m), -depth_m, color=RGBf(0.1, 0.5, 0.1), linestyle=:dash); #hide\nfig2 #hide","category":"page"},{"location":"tutorial/#Pile-load-test-details","page":"Tutorial","title":"Pile load test details","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We consider a pile load test which was carried out at Mobile, Alabama. The test comprised a 457 mm diameter, 9.5 mm wall, closed-toe, steel-pipe pile, driven to 17.0 m below ground, and grouted after driving. The pile stick up was approximately 0.9 m above ground.\n\nFurther details of the test can be found at the website of the test organiser www.fellenius.net.","category":"page"},{"location":"tutorial/#Pile-properties","page":"Tutorial","title":"Pile properties","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The available pile types are listed below.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"prs.list_available_pile_types()","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We assign pile type, pile length and pile diameter.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"pile_type = \"Driven pile - steel closed ended\";\npile_length = 17.0; # metres below ground\npile_diameter = 0.457; # metres\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The pile elastic modulus, E_pile, is caculated for a steel shell, grout filled circular pile.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"odiam = 0.457;\nidiam = 0.457 - 0.0095;\nAouter = pi * odiam^2 / 4;\nAinner = pi * idiam^2 / 4;\nEouter = 200 # GPa;\nEinner = 20  # GPa;\nEpile_GPa = ((Aouter - Ainner) * Eouter + Ainner * Einner) / Aouter;\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Epile_MPa = round(Int64, 1000 * Epile_GPa);\nprint(\"Epile = \", Epile_MPa, \" MPa\")  #hide","category":"page"},{"location":"tutorial/#Pile-ultimate-load-assessment","page":"Tutorial","title":"Pile ultimate load assessment","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We calculate the pile ultimate load following the approach of Frank (2017).\n\nThe calculation of pile ultimate resistance relies on several factors which require a soil type. Using the assessed I_c value, the soil types required for the assessment are defined here as follows:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"I_c  270 : Silt and clay (soil type 1).\n250  I_c leq 270 : Intermediate soil (soil type 2).\nI_c leq 250 : Sand (soil type 3).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"soil_type_CPT2012 = prs.get_soil_type_CPT2012(Ic);\nnothing #hide","category":"page"},{"location":"tutorial/#Pile-ultimate-shaft-load","page":"Tutorial","title":"Pile ultimate shaft load","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The ultimate shaft resistance for each node along the pile shaft is obtained as follows:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"f_s = alphacdot f_sol, with f_sol leq f_smax\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"where:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"f_sol is the unfactored shaft resistance dependent on q_c and soil type.\nalpha is a factor dependent on soil type and pile type.\n\nf_smax is a the limiting shaft resistance dependent on soil type and pile type.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"alpha is shown below for silt and clay, intermediate soils and sands, respectively.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"prs.get_alpha_shaft_CPT2012()[pile_type]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"f_sol is shown below for sands and clays. Note that for intermediate soils the function get_ultimate_shaft_resistance() linearly interpolates f_sol between I_c = 250 (sands) and I_c = 270 (clays).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Plot fsol curves #hide\n# data #hide\nqcfsol = (0:0.1:20); #hide\nfsol_sands = prs.get_fsol_shaft_CPT2012(qcfsol, ones(length(qcfsol))) #hide\nfsol_clays = prs.get_fsol_shaft_CPT2012(qcfsol, 3 * ones(length(qcfsol))) #hide\n# figure #hide\nfig_fsol = Figure(size=(700, 500)); #hide\nax_fsol = Axis(fig_fsol[1, 1], ylabel=\"fsol (kPa)\", xlabel=\"qc (MPa)\", yticks=(0:25:150)) #hide\nlsand1 = lines!(ax_fsol, qcfsol, fsol_sands, color=:Red) #hide\nlclay1 = lines!(ax_fsol, qcfsol, fsol_clays, color=:Blue) #hide\n# legend #hide\naxislegend(ax_fsol, [lsand1, lclay1], [\"Sand and gravel\", \"Clay and silt\"], position=:lt); #hide\nfig_fsol #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We first calculate the ultimate resistance (MPa) for each node along the pile.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fshaft_MPa = prs.get_ultimate_shaft_resistance(qc_MPa, Ic, pile_type, factor=1.0);\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Then the ultimate shaft load (MN) for the whole pile.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"ult_shaft_MN = prs.get_ultimate_shaft_load(depth_m, fshaft_MPa, pile_diameter, pile_length);\nprint(\"The ultimate shaft load is \", round(ult_shaft_MN, digits=3), \" (MN)\") #hide","category":"page"},{"location":"tutorial/#Pile-ultimate-base-load","page":"Tutorial","title":"Pile ultimate base load","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The ultimate base load is obtained as follows:\n\nThe ultimate base resistance (MPa) is given by:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"f_b = k_ccdot q_ca\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"where:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"k_c is a factor dependent on soil type and pile class.\n\nq_ca is the equavalent average cone resistance for the soil within 1.5 diameters above and below the pile base.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"qc_avg_base = prs.get_average_qc_at_pile_base(depth_m, qc_MPa, pile_length, pile_diameter, clip_to_30pct=true);\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"kc_at_base = prs.get_kc_base_CPT2012()[pile_type][soil_type_CPT2012[argmin(abs.(depth_m .- pile_length))]][1];\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We then caculate the ultimate base load (MN).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"fb_MPa = kc_at_base * qc_avg_base;\nult_base_MN = pi * pile_diameter^2 / 4 * fb_MPa;\n\nprint(\"qc_avg_base = \", round(qc_avg_base, digits=2), \" MPa\", \"\\n\") #hide\nprint(\"kc_at_base = \", kc_at_base, \"\\n\") #hide\nprint(\"Ultimate base load = \", round(ult_base_MN, digits=3), \" MN\", \"\\n\") #hide","category":"page"},{"location":"tutorial/#Pile-ultimate-load","page":"Tutorial","title":"Pile ultimate load","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The pile ultimate load is the sum of the ultimate loads for the shaft and the base.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"pile_ult_load = ult_base_MN + ult_shaft_MN\nprint(\"The predicted pile ultimate load is \", round(pile_ult_load, digits=3), \"(MPa)\") #hide","category":"page"},{"location":"tutorial/#Pile-load-displacement-response","page":"Tutorial","title":"Pile load displacement response","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The pile load displacement response is assessed by first calculating an intitial pile head stiffness based on the theory of elasticity. The reduction in pile head (spring) stiffness for increasing load is then obtained by a scaling factor dependent on the ratio of applied load to ultimate load.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The small strain elastic modulus, E_0, along the pile shaft is assumed to vary linearly, and the least squares approximation obtained above gives:\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"E_L = fun_E0_linear(pile_length)\nE_Lon2 = fun_E0_linear(pile_length / 2)\nprint(\"E₀ at the base of the shaft = \", floor(Int64, round(E_L)), \" MPa\\n\") #hide\nprint(\"E₀ at the midpoint of the shaft = \", floor(Int64, round(E_Lon2)), \" MPa\") #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The initial pile head stiffness, k_0, taking account of pile compressibility, is computed following the closed form elastic solution by Randolph and Wroth (1978) as:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"k0 = prs.get_initial_pile_head_stiffness(pile_length, pile_diameter, Epile_MPa, E_L, E_Lon2, ν=Poisson_ratio)\nprint(\"k₀ = \", floor(Int64, round(k0)), \" MN/m\") #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The load displacement curve is derived following a method proposed by Mayne (2001), based on work by Fahey and Carter (1993), in which the pile head (spring) stiffness, for a given load P less than the ultimate load P_ult, is approximated as:\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"k = k_0 cdot (1 - (PP_ult)^03)","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Frist, we specify the pile head loads.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"pile_head_loads = 0.01:0.001:0.90*pile_ult_load;\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We then calculate the total pile head displacement for each load as:\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"s = largefracPk","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"displacement = prs.get_pile_head_displacement(k0, pile_head_loads, pile_ult_load);\nnothing #hide","category":"page"},{"location":"tutorial/#Pile-capacity","page":"Tutorial","title":"Pile capacity","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The pile capacity is calculated as the load at which the allowable pile head settlement is reached.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We specify the allowable pile head settlement (metres).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"allowable_pile_head_settlement_m = 0.06;\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Then calculate the pile capacity.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"pile_capacity_MN = pile_head_loads[argmin(abs.(displacement .- allowable_pile_head_settlement_m))];\nprint(\"The pile capacity is \", round(pile_capacity_MN, digits=3), \" MN\\n\") #hide\nprint(\"The displacement at capacity is \", round(displacement[argmin(abs.(displacement .- allowable_pile_head_settlement_m))], digits=3), \" m\") #hide","category":"page"},{"location":"tutorial/#Load-displacement-curve","page":"Tutorial","title":"Load displacement curve","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The predicted load displacement response for the pile head is shown in the figure below.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"plot_indicies = pile_head_loads .< pile_capacity_MN #hide\nfigDisp = Figure(size=(700, 500)) #hide\nAxis(figDisp[1, 1], xticks=(0:0.01:0.2), yticks=(0:0.5:pile_capacity_MN), xlabel=\"Displacement (m)\", ylabel=\"Pile head load (MN)\") #hide\nlines!(figDisp[1, 1], displacement[plot_indicies], pile_head_loads[plot_indicies]) #hide\nfigDisp #hide","category":"page"},{"location":"tutorial/#Table-of-results","page":"Tutorial","title":"Table of results","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Prepare data\nnum_rows = 10\nmylen = sum.([pile_head_loads .< pile_capacity_MN])[1]\ntable_indices = collect(1:round(Int64, mylen / (num_rows)):mylen)\ntable_indices[end] = mylen\ntable_data = stack([item[table_indices] for item in [pile_head_loads, displacement]])\n# Show table\npretty_table(\n    HTML,\n    table_data,\n    header=[\"Load (MN)\", \"Displacement (m)\"],\n    max_num_of_rows=num_rows,\n    formatters=ft_printf(\"%6.4f\"))","category":"page"},{"location":"tutorial/#Load-carried-by-pile-shaft-at-capacity","page":"Tutorial","title":"Load carried by pile shaft at capacity","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We can now plot the load carried by the pile shaft with depth.\n\nWe set the applied load as the pile capacity.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"applied_load = pile_capacity_MN;\nnothing #hide","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Then calculate the load versus depth.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"mydepth, myload = prs.get_load_vs_depth(depth_m, qc_MPa, Ic, applied_load, pile_ult_load, pile_length, pile_diameter, pile_type);\nnothing #hide","category":"page"},{"location":"tutorial/#Load-versus-depth-at-pile-capacity","page":"Tutorial","title":"Load versus depth at pile capacity","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"figLoadDepth = Figure(size=(500, 700)) #hide\nAxis(figLoadDepth[1, 1], #hide\n    xticks=(0:0.25:(round(pile_capacity_MN)+0.5)), #hide\n    yticks=(-round(depth_m[end] + 1):0), #hide\n    limits=((0, round(pile_capacity_MN) + 0.5), (-pile_length - 1, 0)), #hide\n    title=\"Load carried by pile shaft at capacity\", #hide\n    xlabel=\"Load (MN)\", #hide\n    ylabel=\"Elevation (m)\") #hide\nlines!(figLoadDepth[1, 1], myload, -mydepth) #hide\nfigLoadDepth #hide","category":"page"},{"location":"tutorial/#Concluding-remarks","page":"Tutorial","title":"Concluding remarks","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Thank you for following this tutorial.\n\nIf you would like to calculate the pile ultimate load or the load-displacement response with a single function, please see the module FastSolve.jl in the GitHub repository.\n\nThis tutorial was completed in Sydney, Australia on 23 February 2025.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"This page was generated using Literate.jl.","category":"page"}]
}
